// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(AsusContext))]
    partial class AsusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Domain.Drzava", b =>
                {
                    b.Property<int>("IDDrzave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivDrzave")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDDrzave");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("Model.Domain.Grad", b =>
                {
                    b.Property<int>("PostanskiBroj")
                        .HasColumnType("int");

                    b.Property<int>("IDDrzave")
                        .HasColumnType("int");

                    b.Property<string>("NazivGrada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostanskiBroj", "IDDrzave");

                    b.HasIndex("IDDrzave");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("Model.Domain.Kupac", b =>
                {
                    b.Property<int>("PIB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDDrzave")
                        .HasColumnType("int");

                    b.Property<string>("NazivKupca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostanskiBroj")
                        .HasColumnType("int");

                    b.Property<string>("UlicaBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PIB");

                    b.HasIndex("PostanskiBroj", "IDDrzave");

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("Model.Domain.OdgovornoLice", b =>
                {
                    b.Property<int>("SifraRadnika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImePrezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SifraTrzista")
                        .HasColumnType("int");

                    b.HasKey("SifraRadnika");

                    b.HasIndex("SifraTrzista");

                    b.ToTable("OdgovornoLice");
                });

            modelBuilder.Entity("Model.Domain.Proizvod", b =>
                {
                    b.Property<int>("SifraProizvoda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivModela")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SifraProizvoda");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Model.Domain.Trziste", b =>
                {
                    b.Property<int>("SifraTrzista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivTrzista")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SifraTrzista");

                    b.ToTable("Trziste");
                });

            modelBuilder.Entity("Model.Domain.Grad", b =>
                {
                    b.HasOne("Model.Domain.Drzava", "Drzava")
                        .WithMany()
                        .HasForeignKey("IDDrzave")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("Model.Domain.Kupac", b =>
                {
                    b.HasOne("Model.Domain.Grad", "Grad")
                        .WithMany("Kupci")
                        .HasForeignKey("PostanskiBroj", "IDDrzave")
                        .HasConstraintName("FK_Kupac_Grad")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("Model.Domain.OdgovornoLice", b =>
                {
                    b.HasOne("Model.Domain.Trziste", "Trziste")
                        .WithMany()
                        .HasForeignKey("SifraTrzista")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Trziste");
                });

            modelBuilder.Entity("Model.Domain.Proizvod", b =>
                {
                    b.OwnsMany("Model.Domain.Karakteristika", "Karakteristike", b1 =>
                        {
                            b1.Property<int>("IDKarakteristike")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("SifraProizvoda")
                                .HasColumnType("int");

                            b1.Property<string>("NazivKarakteristike")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Vrednost")
                                .HasColumnType("float");

                            b1.HasKey("IDKarakteristike", "SifraProizvoda");

                            b1.HasIndex("SifraProizvoda");

                            b1.ToTable("Karakteristika");

                            b1.WithOwner("Proizvod")
                                .HasForeignKey("SifraProizvoda");

                            b1.Navigation("Proizvod");
                        });

                    b.Navigation("Karakteristike");
                });

            modelBuilder.Entity("Model.Domain.Grad", b =>
                {
                    b.Navigation("Kupci");
                });
#pragma warning restore 612, 618
        }
    }
}
